{"version":3,"file":"static/js/816.dea7238e.chunk.js","mappings":"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","sources":["Navbar/index.js","components/Form/InputType.js","components/Form/Form.js","pages/Auth/Login.js"],"sourcesContent":["import React from \"react\";\n// eslint-disable-next-line\nimport { AppBar, Box, Button, IconButton, Toolbar, Typography } from \"@mui/material\";\n\nconst Navbar = () => {\n  return (\n      <AppBar position=\"static\" style={{backgroundColor: \"blue\", boxShadow: \"none\" }}>\n        <Toolbar>\n          \n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            MEDONMA LIFE CARE\n          </Typography>\n          <Box sx={{ display: { xs: 'none', md: 'flex' } }}>\n            <Button color=\"inherit\" onClick={() => (window.location.href = \"/home\")}>\n              Home\n            </Button>\n            <Button color=\"inherit\" onClick={() => (window.location.href = \"/about\")}>\n              About\n            </Button>\n            <Button color=\"inherit\" onClick={() => (window.location.href = \"/contact\")}>\n              Contact\n            </Button>\n            <Button color=\"inherit\" onClick={() => (window.location.href = \"/login\")}>\n              Login\n            </Button>\n            <Button color=\"inherit\" onClick={() => (window.location.href = \"/signup\")}>\n              Signup\n            </Button>\n          </Box>\n        </Toolbar>\n      </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\n\nconst InputType = ({\n  labelText,\n  labelFor,\n  inputType,\n  value,\n  onChange,\n  name,\n}) => {\n  return (\n    <>\n      <div className=\"mb-1\">\n        <label htmlFor={labelFor} className=\"form-label\">\n          {labelText}\n        </label>\n        <input\n          type={inputType}\n          className=\"form-control\"\n          name={name}\n          value={value}\n          onChange={onChange}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default InputType;\n","import React, { useState } from \"react\";\nimport { Button, Grid, Radio, RadioGroup, FormControlLabel, Typography, Link, Snackbar } from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport InputType from \"./InputType\";\n\nconst Form = ({ formType, submitBtn, formTitle }) => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [role, setRole] = useState(\"donar\");\n  const [name, setName] = useState(\"\");\n  const [organisationName, setOrganisationName] = useState(\"\");\n  const [hospitalName, setHospitalName] = useState(\"\");\n  const [website, setWebsite] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    // Example: You can add your API call logic here\n    // For demonstration purposes, an error message is set if the email is not provided.\n    if (!email) {\n      setError(\"Please provide an email address.\");\n      setOpenSnackbar(true);\n    } else {\n      // Clear error if present\n      setError(null);\n\n      // Example: You can perform your API call or other logic here\n      console.log(\"Form submitted:\", { email, password, role, name, organisationName, hospitalName, website, address, phone });\n\n      // Reset form fields\n      setEmail(\"\");\n      setPassword(\"\");\n      setRole(\"donar\");\n      setName(\"\");\n      setOrganisationName(\"\");\n      setHospitalName(\"\");\n      setWebsite(\"\");\n      setAddress(\"\");\n      setPhone(\"\");\n    }\n  };\n\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" align=\"center\" gutterBottom>\n          {formTitle}\n        </Typography>\n        <hr />\n      </Grid>\n\n      <Grid item xs={12}>\n        <RadioGroup\n          row\n          value={role}\n          onChange={(e) => setRole(e.target.value)}\n        >\n          <FormControlLabel value=\"donar\" control={<Radio />} label=\"Donar\" />\n          <FormControlLabel value=\"admin\" control={<Radio />} label=\"Admin\" />\n          <FormControlLabel value=\"hospital\" control={<Radio />} label=\"Hospital\" />\n          <FormControlLabel value=\"organisation\" control={<Radio />} label=\"Organisation\" />\n        </RadioGroup>\n      </Grid>\n\n      {formType === \"login\" ? (\n        <>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Email\"\n              inputType=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Password\"\n              inputType=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Grid>\n        </>\n      ) : (\n        <>\n          {(role === \"admin\" || role === \"donar\") && (\n            <Grid item xs={12}>\n              <InputType\n                labelText=\"Name\"\n                inputType=\"text\"\n                name=\"name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              />\n            </Grid>\n          )}\n          {role === \"organisation\" && (\n            <Grid item xs={12}>\n              <InputType\n                labelText=\"Organisation Name\"\n                inputType=\"text\"\n                name=\"organisationName\"\n                value={organisationName}\n                onChange={(e) => setOrganisationName(e.target.value)}\n              />\n            </Grid>\n          )}\n          {role === \"hospital\" && (\n            <Grid item xs={12}>\n              <InputType\n                labelText=\"Hospital Name\"\n                inputType=\"text\"\n                name=\"hospitalName\"\n                value={hospitalName}\n                onChange={(e) => setHospitalName(e.target.value)}\n              />\n            </Grid>\n          )}\n\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Email\"\n              inputType=\"email\"\n              name=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Password\"\n              inputType=\"password\"\n              name=\"password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Website\"\n              inputType=\"text\"\n              name=\"website\"\n              value={website}\n              onChange={(e) => setWebsite(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Address\"\n              inputType=\"text\"\n              name=\"address\"\n              value={address}\n              onChange={(e) => setAddress(e.target.value)}\n            />\n          </Grid>\n          <Grid item xs={12}>\n            <InputType\n              labelText=\"Phone\"\n              inputType=\"text\"\n              name=\"phone\"\n              value={phone}\n              onChange={(e) => setPhone(e.target.value)}\n            />\n          </Grid>\n        </>\n      )}\n\n      <Grid item xs={12}>\n        <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n          {formType === \"login\" ? (\n            <Typography variant=\"body1\">\n              Not registered yet? Register\n              <Link to=\"/register\"> Here!</Link>\n            </Typography>\n          ) : (\n            <Typography variant=\"body1\">\n              Already a user? Please\n              <Link to=\"/login\"> Login!</Link>\n            </Typography>\n          )}\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\" onClick={handleFormSubmit}>\n            {submitBtn}\n          </Button>\n        </div>\n      </Grid>\n\n      {/* Error Snackbar */}\n      <Snackbar open={openSnackbar} autoHideDuration={6000} onClose={handleSnackbarClose}>\n        <MuiAlert elevation={6} variant=\"filled\" severity=\"error\" onClose={handleSnackbarClose}>\n          {error}\n        </MuiAlert>\n      </Snackbar>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/**\n * @description      : Login component with asynchronous API call handling\n * @author           : Your Name\n * @group            : Your Group\n * @created          : 03/02/2024 - 17:59:35\n *\n * MODIFICATION LOG\n * - Version         : 1.0.0\n * - Date            : 03/02/2024\n * - Author          : Your Name\n * - Modification    : Updated API call handling\n **/\nimport { Grid, useMediaQuery } from \"@mui/material\";\nimport { useTheme } from \"@mui/system\";\nimport React, { useEffect } from \"react\";\nimport Navbar from \"../../Navbar\";\nimport Form from \"../../components/Form/Form\";\n\nconst Login = () => {\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"sm\"));\n\n  useEffect(() => {\n    // Check if token exists in local storage\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const role = localStorage.getItem(\"role\");\n      window.location.href = \"/\" + role + \"/dashboard\";\n    }\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n      <Grid container>\n        {isMobile ? (\n          <>\n            <Grid item xs={12} className=\"form-container\">\n              <Form\n                formTitle={\"Login Page\"}\n                submitBtn={\"Login\"}\n                formType={\"login\"}\n              />\n            </Grid>\n          </>\n        ) : (\n          <>\n            <Grid item md={8} className=\"form-banner\">\n              <img\n                src=\"./assets/images/banner1.jpg\"\n                alt=\"loginImage\"\n                style={{ width: \"100%\", height: \"100%\" }}\n              />\n            </Grid>\n            <Grid item md={4} className=\"form-container\">\n              <Form\n                formTitle={\"Login Page\"}\n                submitBtn={\"Login\"}\n                formType={\"login\"}\n              />\n            </Grid>\n          </>\n        )}\n      </Grid>\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["Navbar","_jsx","AppBar","position","style","backgroundColor","boxShadow","children","_jsxs","Toolbar","Typography","variant","component","sx","flexGrow","Box","display","xs","md","Button","color","onClick","window","location","href","_ref","labelText","labelFor","inputType","value","onChange","name","_Fragment","className","htmlFor","type","formType","submitBtn","formTitle","email","setEmail","useState","password","setPassword","role","setRole","setName","organisationName","setOrganisationName","hospitalName","setHospitalName","website","setWebsite","address","setAddress","phone","setPhone","error","setError","openSnackbar","setOpenSnackbar","handleSnackbarClose","event","reason","Grid","container","spacing","item","align","gutterBottom","RadioGroup","row","e","target","FormControlLabel","control","Radio","label","InputType","justifyContent","Link","to","preventDefault","console","log","Snackbar","open","autoHideDuration","onClose","MuiAlert","elevation","severity","Login","theme","useTheme","isMobile","useMediaQuery","breakpoints","down","useEffect","localStorage","getItem","Form","src","alt","width","height"],"sourceRoot":""}