{"version":3,"file":"static/js/976.2ba06dea.chunk.js","mappings":"kHAAA,MA+DA,EA/Da,WACX,MAAMA,EAAU,iCAQVC,EAAUC,MAAOC,EAAQC,EAAMC,KACnC,IAAIC,EAAG,GAAAC,OAAMP,GAAOO,OAAGH,GACvB,MAAMI,EANCC,aAAaC,QAAQ,SAOtBC,EAAU,CACd,eAAgB,oBAGdH,IACFG,EAAuB,cAAC,UAAAJ,OAAaC,IAGvC,IAAII,EAAU,CACZT,SACAQ,WAGF,GAAe,QAAXR,EACFS,EAAQC,KAAOC,KAAKC,UAAUV,QACzB,GAAIA,EAAM,CAEf,MAAMW,EAAc,IAAIC,gBAAgBZ,GAAMa,WAC9CN,EAAU,IACLA,EACHT,SACAQ,WAEFL,EAAG,GAAAC,OAAMP,GAAOO,OAAGH,EAAI,KAAAG,OAAIS,EAC7B,CAEA,IACE,MAAMG,QAAiBC,MAAMd,EAAKM,GAClC,aAAaO,EAASE,MACxB,CAAE,MAAOC,GAIP,OAHAC,QAAQD,MAAM,kBAAmBA,EAAME,SAGhC,CAAEF,OAAO,EAAME,QAASF,EAAME,QACvC,GASF,MAAO,CACLC,IANUA,CAACrB,EAAMC,IAASJ,EAAQ,MAAOG,EAAMC,GAO/CqB,IANUA,CAACtB,EAAMC,IAASJ,EAAQ,MAAOG,EAAMC,GAO/CsB,KANWA,CAACvB,EAAMC,IAASJ,EAAQ,OAAQG,EAAMC,GAOjDuB,IANUA,CAACxB,EAAMC,IAASJ,EAAQ,SAAUG,EAAMC,GAQtD,CA7Da,E,mLCKb,MA6CA,EA7CewB,KAEXC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,SAAS,SAASC,MAAO,CAAEC,UAAW,QAASC,UACrDC,EAAAA,EAAAA,MAACC,EAAAA,EAAO,CAAAF,SAAA,EACNL,EAAAA,EAAAA,KAACQ,EAAAA,EAAM,CAACC,IAAKC,EAAMC,GAAI,CAAEC,MAAO,GAAIC,OAAQ,IAAMC,IAAI,aACtDd,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACC,QAAQ,KAAKC,UAAU,MAAMN,GAAI,CAAEO,SAAU,GAAIb,SAAC,mCAG9DC,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CAACR,GAAI,CAAES,QAAS,CAAEC,GAAI,OAAQC,GAAI,SAAWjB,SAAA,EAC/CL,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAASA,IAAOC,OAAOC,SAASC,KAAO,QAASvB,SACjD,UAGDL,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAASA,IAAOC,OAAOC,SAASC,KAAO,SAAUvB,SAClD,WAGDL,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAASA,IAAOC,OAAOC,SAASC,KAAO,WAAYvB,SACpD,aAGDL,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAASA,IAAOC,OAAOC,SAASC,KAAO,SAAUvB,SAClD,WAGDL,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLC,MAAM,UACNC,QAASA,IAAOC,OAAOC,SAASC,KAAO,UAAWvB,SACnD,kB,gOCrBX,MAAMwB,GAAeC,EAAAA,EAAAA,KAqBrB,MA+XA,EA/XaC,IAAyC,IAAxC,SAAEC,EAAQ,UAAEC,EAAS,UAAEC,GAAWH,EAC9C,MAAOI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,MAAO,GACPC,SAAU,GACVC,KAAM,QACNC,IAAK,GACLC,KAAM,GACNC,iBAAkB,GAClBC,aAAc,GACdC,QAAS,GACTC,QAAS,GACTC,MAAO,KAGHC,EAAgBC,IACpB,MAAM,KAAEP,EAAI,MAAEQ,GAAUD,EAAME,OAC9Bf,EAAY,IACPD,EACH,CAACO,GAAOQ,GACR,GAEG1D,EAAO4D,IAAYf,EAAAA,EAAAA,UAAS,OAC5BgB,EAAcC,IAAmBjB,EAAAA,EAAAA,WAAS,GAE3CkB,EAAsBA,CAACN,EAAOO,KACnB,cAAXA,GAGJF,GAAgB,EAAM,EAGlBG,EAAmBrF,UAKvB,GAJAsF,EAAEC,iBAIGxB,EAASG,MAOZ,GAFAc,EAAS,MAEQ,UAAbpB,EACF,IACE,MAAM4B,QAA2BtE,MAC/B,mDAEIuE,QAAmBD,EAAmBrE,OAGtCL,EAAc,CAClBoD,MAAOH,EAASG,MAChBC,SAAUJ,EAASI,SACnB,uBAAwBsB,EAAWC,GACnC,uBAAwBD,EAAWE,UAAUC,GAC7C,iCAAkCH,EAAWlC,SAASsC,SACtD,kCAAmCJ,EAAWlC,SAASuC,UACvD,wBAAwB,GAADzF,OAAKoF,EAAWlC,SAASwC,KAAI,MAAA1F,OAAKoF,EAAWlC,SAASyC,OAAO1B,MACpF,kCAAkC,EAClC,gCAAiC2B,UAAUC,cAAcC,OACzD,iCAAkCV,EAAWW,WAAWC,OACxD,mCAAoCZ,EAAWW,WAAW9B,KAC1D,sCACEmB,EAAWW,WAAWE,QACxB,iBAAkBb,EAAWW,WAAWG,GAAGjC,KAC3C,qBAAsBmB,EAAWW,WAAWI,OAAOlC,KACnD,uBACE,gDAGEmC,QAAYC,EAAAA,EAAInF,IAAI,aAAcT,GACpC2F,EAAIrF,OACN4D,EAASyB,EAAInF,SACb4D,GAAgB,KAEhB3E,aAAaoG,QAAQ,QAASF,EAAItG,KAAKG,OACvCC,aAAaoG,QAAQ,QAASF,EAAItG,KAAK+D,OACvC3D,aAAaoG,QAAQ,OAAQ5C,EAASK,MACtCd,OAAOC,SAASC,KAAO,IAAMO,EAASK,KAAO,aAEjD,CAAE,MAAOhD,GACP4D,EAAS5D,EAAME,SACf4D,GAAgB,EAClB,MAEA,IACE,MAAMuB,QAAYC,EAAAA,EAAInF,IAAI,cAAewC,GACrC0C,EAAIrF,OACN4D,EAASyB,EAAInF,SACb4D,GAAgB,KAEhB3E,aAAaoG,QAAQ,QAASF,EAAItG,KAAK+D,OACvC3D,aAAaoG,QAAQ,UAAU,GAC/BrD,OAAOC,SAASC,KAAO,UAE3B,CAAE,MAAOpC,GACP4D,EAAS5D,EAAME,SACf4D,GAAgB,EAClB,MA9DFF,EAAS,oCACTE,GAAgB,EAiElB,EAGF,OACEtD,EAAAA,EAAAA,KAACgF,EAAAA,EAAa,CAACC,MAAOpD,EAAaxB,UACjCC,EAAAA,EAAAA,MAAC4E,EAAAA,GAAI,CAACC,WAAS,EAAClE,UAAU,OAAON,GAAI,CAAEE,OAAQ,QAASR,SAAA,EACtDL,EAAAA,EAAAA,KAACoF,EAAAA,GAAW,KACZpF,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CACHG,MAAI,EACJhE,IAAI,EACJiE,GAAI,EACJhE,GAAI,EACJX,GAAI,CACF4E,gBACe,UAAbvD,EAAoB,wGAGtBwD,iBAAkB,YAClBC,gBAAkBC,GACG,UAAnBA,EAAEC,QAAQC,KACNF,EAAEC,QAAQE,KAAK,IACfH,EAAEC,QAAQE,KAAK,KACrBC,eAAgB,QAChBC,mBAAoB,aAIxB/F,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACG,MAAI,EAAChE,GAAI,EAAGiE,GAAI,EAAGhE,GAAI,EAAGL,UAAW+E,EAAAA,EAAOC,UAAW,EAAGC,QAAM,EAAA7F,UACpEC,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CACFR,GAAI,CACFwF,GAAI,EACJC,GAAI,EACJhF,QAAS,OACTiF,cAAe,SACfC,WAAY,UACZjG,SAAA,EAEFL,EAAAA,EAAAA,KAACe,EAAAA,EAAU,CAACE,UAAU,KAAKD,QAAQ,KAAIX,SACpC6B,KAEHlC,EAAAA,EAAAA,KAAA,UAEAA,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACG,MAAI,EAAChE,GAAI,GAAGhB,UAChBC,EAAAA,EAAAA,MAACiG,EAAAA,EAAU,CACTC,KAAG,EACHtD,MAAOf,EAASK,KAChBE,KAAK,OACL+D,SAAUzD,EAAa3C,SAAA,EAEvBL,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfxD,MAAM,QACNyD,SAAS3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,IACfC,MAAM,WAER7G,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfxD,MAAM,QACNyD,SAAS3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,IACfC,MAAM,WAER7G,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfxD,MAAM,WACNyD,SAAS3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,IACfC,MAAM,cAER7G,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfxD,MAAM,eACNyD,SAAS3G,EAAAA,EAAAA,KAAC4G,EAAAA,EAAK,IACfC,MAAM,sBAKE,UAAb7E,GACC1B,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CACFF,UAAU,OACV6F,YAAU,EACVC,SAAUtD,EACV9C,GAAI,CAAEqG,GAAI,GAAI3G,SAAA,EAEdL,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTpD,GAAG,QACH6C,MAAM,gBACNnE,KAAK,QACL2E,aAAa,QACbnE,MAAOf,EAASG,MAChBmE,SAAUzD,EACVsE,WAAS,KAEXtH,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACT1E,KAAK,WACLmE,MAAM,WACNU,KAAK,WACLrE,MAAOf,EAASI,SAChBkE,SAAUzD,EACVgB,GAAG,WACHqD,aAAa,sBAEfrH,EAAAA,EAAAA,KAAC0G,EAAAA,EAAgB,CACfC,SAAS3G,EAAAA,EAAAA,KAACwH,EAAAA,EAAQ,CAACtE,MAAM,WAAW1B,MAAM,YAC1CqF,MAAM,iBAER7G,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLgG,KAAK,SACLH,WAAS,EACTpG,QAAQ,YACRL,GAAI,CAAEqG,GAAI,EAAGS,GAAI,GAAIpH,SACtB,aAGDC,EAAAA,EAAAA,MAAC4E,EAAAA,GAAI,CAACC,WAAS,EAAA9E,SAAA,EACbL,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACG,MAAI,EAAChE,IAAE,EAAAhB,UACXL,EAAAA,EAAAA,KAAC0H,EAAAA,EAAI,CAAC9F,KAAK,IAAIZ,QAAQ,QAAOX,SAAC,wBAIjCL,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACG,MAAI,EAAAhF,UACRL,EAAAA,EAAAA,KAAC0H,EAAAA,EAAI,CAAC9F,KAAK,SAASZ,QAAQ,QAAOX,SAChC,4CAMTC,EAAAA,EAAAA,MAACa,EAAAA,EAAG,CACFF,UAAU,OACV6F,YAAU,EACVC,SAAUtD,EACV9C,GAAI,CAAEqG,GAAI,GAAI3G,SAAA,EAEM,UAAlB8B,EAASK,MAAsC,UAAlBL,EAASK,QACtClC,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAAtH,SAAA,EACEL,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,OACNe,UAAU,OACVlF,KAAK,OACL2E,aAAa,OACbrD,GAAG,OACHd,MAAOf,EAASO,KAChB+D,SAAUzD,KAGZhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,gBACNe,UAAU,OACVlF,KAAK,MACL2E,aAAa,MACbrD,GAAG,MACHd,MAAOf,EAASM,IAChBgE,SAAUzD,OAIG,iBAAlBb,EAASK,OACRxC,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,oBACNe,UAAU,OACVlF,KAAK,mBACLQ,MAAOf,EAASQ,iBAChB8D,SAAUzD,IAGK,aAAlBb,EAASK,OACRxC,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,gBACNe,UAAU,OACVlF,KAAK,eACLQ,MAAOf,EAASS,aAChB6D,SAAUzD,KAIdhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,QACNe,UAAU,QACVlF,KAAK,QACLQ,MAAOf,EAASG,MAChBmE,SAAUzD,KAEZhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,WACNe,UAAU,WACVlF,KAAK,WACLQ,MAAOf,EAASI,SAChBkE,SAAUzD,KAEZhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,UACNe,UAAU,OACVlF,KAAK,UACLQ,MAAOf,EAASU,QAChB4D,SAAUzD,KAEZhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,UACNe,UAAU,OACVlF,KAAK,UACLQ,MAAOf,EAASW,QAChB2D,SAAUzD,KAEZhD,EAAAA,EAAAA,KAACiH,EAAAA,EAAS,CACRC,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTP,MAAM,QACNe,UAAU,OACVlF,KAAK,QACLQ,MAAOf,EAASY,MAChB0D,SAAUzD,KAGZhD,EAAAA,EAAAA,KAACuB,EAAAA,EAAM,CACLgG,KAAK,SACLH,WAAS,EACTpG,QAAQ,YACRL,GAAI,CAAEqG,GAAI,EAAGS,GAAI,GAAIpH,SACtB,aAGDL,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACC,WAAS,EAAA9E,UACbL,EAAAA,EAAAA,KAACkF,EAAAA,GAAI,CAACG,MAAI,EAAAhF,UACRL,EAAAA,EAAAA,KAAC0H,EAAAA,EAAI,CAAC9F,KAAK,SAASZ,QAAQ,QAAOX,SAChC,4CAQXL,EAAAA,EAAAA,KAAC6H,EAAAA,EAAQ,CACPC,KAAMzE,EACN0E,iBAAkB,IAClBC,QAASzE,EAAoBlD,UAE7BL,EAAAA,EAAAA,KAACiI,EAAAA,EAAQ,CACPhC,UAAW,EACXjF,QAAQ,SACRkH,SAAS,QACTF,QAASzE,EAAoBlD,SAE5Bb,eAMG,C,2FClZpB,MAoBA,EApBc2I,MACZC,EAAAA,EAAAA,YAAU,KAIR,GAFczJ,aAAaC,QAAQ,SAExB,CACT,MAAM4D,EAAO7D,aAAaC,QAAQ,QAClC8C,OAAOC,SAASC,KAAO,IAAMY,EAAO,YACtC,IACC,KAGDlC,EAAAA,EAAAA,MAAAqH,EAAAA,SAAA,CAAAtH,SAAA,EACEL,EAAAA,EAAAA,KAACD,EAAAA,EAAM,KAEPC,EAAAA,EAAAA,KAACqI,EAAAA,EAAI,CAACnG,UAAW,aAAcD,UAAW,QAASD,SAAU,a","sources":["API/index.js","Navbar/index.js","components/Form/Form.js","pages/Auth/Login.js"],"sourcesContent":["const api = (function () {\n  const baseUrl = \"https://api.medonma.me/api/v1/\"; // Set your default API base URL\n\n  // Function to get the token from local storage\n  const getToken = () => {\n    return localStorage.getItem(\"token\");\n  };\n\n  // Function to make requests\n  const request = async (method, path, data) => {\n    var url = `${baseUrl}${path}`;\n    const token = getToken();\n    const headers = {\n      \"Content-Type\": \"application/json\",\n    };\n\n    if (token) {\n      headers[\"Authorization\"] = `Bearer ${token}`;\n    }\n\n    let options = {\n      method,\n      headers,\n    };\n\n    if (method !== \"GET\") {\n      options.body = JSON.stringify(data);\n    } else if (data) {\n      // If it's a GET request and there are data, encode it to a URL string\n      const queryParams = new URLSearchParams(data).toString();\n      options = {\n        ...options,\n        method,\n        headers,\n      };\n      url = `${baseUrl}${path}?${queryParams}`;\n    }\n\n    try {\n      const response = await fetch(url, options);\n      return await response.json();\n    } catch (error) {\n      console.error(\"Request failed:\", error.message);\n      //   notify.error(error.message); // Display error message using notify\n      // throw { error: true, message: error };\n      return { error: true, message: error.message };\n    }\n  };\n\n  // Helper functions for each HTTP method\n  const get = (path, data) => request(\"GET\", path, data);\n  const put = (path, data) => request(\"PUT\", path, data);\n  const post = (path, data) => request(\"POST\", path, data);\n  const del = (path, data) => request(\"DELETE\", path, data);\n\n  return {\n    get,\n    put,\n    post,\n    del,\n  };\n})();\n\nexport default api;\n","import React from \"react\";\n// eslint-disable-next-line\nimport { AppBar, Box, Button, Toolbar, Typography, Avatar } from \"@mui/material\";\nimport LOGO from \"../assets/images/medonma.png\"\n\nconst Navbar = () => {\n  return (\n    <AppBar position=\"static\" style={{ boxShadow: \"none\" }}>\n      <Toolbar>\n        <Avatar src={LOGO} sx={{ width: 30, height: 30 }} alt=\"MEDONMA\"/>\n        <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n          &nbsp;&nbsp;&nbsp;MEDONMA LIFE CARE\n        </Typography>\n        <Box sx={{ display: { xs: \"none\", md: \"flex\" } }}>\n          <Button\n            color=\"inherit\"\n            onClick={() => (window.location.href = \"/home\")}\n          >\n            Home\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => (window.location.href = \"/about\")}\n          >\n            About\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => (window.location.href = \"/contact\")}\n          >\n            Contact\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => (window.location.href = \"/login\")}\n          >\n            Login\n          </Button>\n          <Button\n            color=\"inherit\"\n            onClick={() => (window.location.href = \"/signup\")}\n          >\n            Signup\n          </Button>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","import React, { useState } from \"react\";\nimport {\n  Button,\n  Grid,\n  Radio,\n  RadioGroup,\n  FormControlLabel,\n  Typography,\n  Link,\n  Snackbar,\n} from \"@mui/material\";\nimport MuiAlert from \"@mui/material/Alert\";\nimport CssBaseline from \"@mui/material/CssBaseline\";\nimport TextField from \"@mui/material/TextField\";\nimport Checkbox from \"@mui/material/Checkbox\";\nimport Paper from \"@mui/material/Paper\";\nimport Box from \"@mui/material/Box\";\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\nimport API from \"../../API\";\n\nconst defaultTheme = createTheme();\n\n// eslint-disable-next-line\nfunction Copyright(props) {\n  return (\n    <Typography\n      variant=\"body2\"\n      color=\"text.secondary\"\n      align=\"center\"\n      {...props}\n    >\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://medonma.me/\">\n        MEDONMA\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nconst Form = ({ formType, submitBtn, formTitle }) => {\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    role: \"donor\",\n    dob: \"\",\n    name: \"\",\n    organisationName: \"\",\n    hospitalName: \"\",\n    website: \"\",\n    address: \"\",\n    phone: \"\",\n  });\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n    setFormData({\n      ...formData,\n      [name]: value,\n    });\n  };\n  const [error, setError] = useState(null);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleSnackbarClose = (event, reason) => {\n    if (reason === \"clickaway\") {\n      return;\n    }\n    setOpenSnackbar(false);\n  };\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    // Example: You can add your API call logic here\n    // For demonstration purposes, an error message is set if the email is not provided.\n    if (!formData.email) {\n      setError(\"Please provide an email address.\");\n      setOpenSnackbar(true);\n    } else {\n      // Clear error if present\n      setError(null);\n\n      if (formType === \"login\") {\n        try {\n          const deviceInfoResponse = await fetch(\n            \"https://api.ipregistry.co/?key=avx02aeoi63vo3vt\",\n          );\n          const deviceInfo = await deviceInfoResponse.json();\n\n          // Construct the URL with query parameters\n          const queryParams = {\n            email: formData.email,\n            password: formData.password,\n            \"deviceData[publicIP]\": deviceInfo.ip,\n            \"deviceData[timeZone]\": deviceInfo.time_zone.id,\n            \"deviceData[location][latitude]\": deviceInfo.location.latitude,\n            \"deviceData[location][longitude]\": deviceInfo.location.longitude,\n            \"deviceData[location_]\": `${deviceInfo.location.city}, ${deviceInfo.location.region.name}`,\n            \"deviceData[browser][isBrowser]\": true,\n            \"deviceData[browser][isMobile]\": navigator.userAgentData.mobile,\n            \"deviceData[browser][userAgent]\": deviceInfo.user_agent.header,\n            \"deviceData[browser][browserName]\": deviceInfo.user_agent.name,\n            \"deviceData[browser][browserVersion]\":\n              deviceInfo.user_agent.version,\n            \"deviceData[os]\": deviceInfo.user_agent.os.name,\n            \"deviceData[device]\": deviceInfo.user_agent.device.name,\n            \"deviceData[deviceID]\":\n              \"fyuusvjhatsyudyguyjcmkdksajdasidjydfudsiufbd\",\n          };\n\n          const res = await API.get(\"auth/login\", queryParams);\n          if (res.error) {\n            setError(res.message);\n            setOpenSnackbar(true);\n          } else {\n            localStorage.setItem(\"token\", res.data.token);\n            localStorage.setItem(\"email\", res.data.email);\n            localStorage.setItem(\"role\", formData.role);\n            window.location.href = \"/\" + formData.role + \"/dashboard\";\n          }\n        } catch (error) {\n          setError(error.message);\n          setOpenSnackbar(true);\n        }\n      } else {\n        try {\n          const res = await API.get(\"auth/create\", formData);\n          if (res.error) {\n            setError(res.message);\n            setOpenSnackbar(true);\n          } else {\n            localStorage.setItem(\"email\", res.data.email);\n            localStorage.setItem(\"verify\", true);\n            window.location.href = \"/verify\";\n          }\n        } catch (error) {\n          setError(error.message);\n          setOpenSnackbar(true);\n        }\n      }\n\n      \n    }\n  };\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <Grid container component=\"main\" sx={{ height: \"95vh\" }}>\n        <CssBaseline />\n        <Grid\n          item\n          xs={false}\n          sm={4}\n          md={7}\n          sx={{\n            backgroundImage:\n              formType === \"login\"\n                ? `url(https://medonma.me/assets/images/banner1.jpg)`\n                : `url(https://medonma.me/assets/images/banner2.jpg)`,\n            backgroundRepeat: \"no-repeat\",\n            backgroundColor: (t) =>\n              t.palette.mode === \"light\"\n                ? t.palette.grey[50]\n                : t.palette.grey[900],\n            backgroundSize: \"cover\",\n            backgroundPosition: \"center\",\n          }}\n        />\n\n        <Grid item xs={6} sm={8} md={5} component={Paper} elevation={6} square>\n          <Box\n            sx={{\n              my: 8,\n              mx: 4,\n              display: \"flex\",\n              flexDirection: \"column\",\n              alignItems: \"center\",\n            }}\n          >\n            <Typography component=\"h1\" variant=\"h5\">\n              {formTitle}\n            </Typography>\n            <hr />\n\n            <Grid item xs={12}>\n              <RadioGroup\n                row\n                value={formData.role}\n                name=\"role\"\n                onChange={handleChange}\n              >\n                <FormControlLabel\n                  value=\"donor\"\n                  control={<Radio />}\n                  label=\"Donor\"\n                />\n                <FormControlLabel\n                  value=\"admin\"\n                  control={<Radio />}\n                  label=\"Admin\"\n                />\n                <FormControlLabel\n                  value=\"hospital\"\n                  control={<Radio />}\n                  label=\"Hospital\"\n                />\n                <FormControlLabel\n                  value=\"organisation\"\n                  control={<Radio />}\n                  label=\"Organisation\"\n                />\n              </RadioGroup>\n            </Grid>\n\n            {formType === \"login\" ? (\n              <Box\n                component=\"form\"\n                noValidate\n                onSubmit={handleFormSubmit}\n                sx={{ mt: 5 }}\n              >\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                  autoFocus\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  type=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                  id=\"password\"\n                  autoComplete=\"current-password\"\n                />\n                <FormControlLabel\n                  control={<Checkbox value=\"remember\" color=\"primary\" />}\n                  label=\"Remember me\"\n                />\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Sign In\n                </Button>\n                <Grid container>\n                  <Grid item xs>\n                    <Link href=\"#\" variant=\"body2\">\n                      Forgot password?\n                    </Link>\n                  </Grid>\n                  <Grid item>\n                    <Link href=\"signup\" variant=\"body2\">\n                      {\"Don't have an account? Sign Up\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Box>\n            ) : (\n              <Box\n                component=\"form\"\n                noValidate\n                onSubmit={handleFormSubmit}\n                sx={{ mt: 1 }}\n              >\n                {(formData.role === \"admin\" || formData.role === \"donor\") && (\n                  <>\n                    <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      label=\"Name\"\n                      inputType=\"text\"\n                      name=\"name\"\n                      autoComplete=\"name\"\n                      id=\"name\"\n                      value={formData.name}\n                      onChange={handleChange}\n                    />\n\n                    <TextField\n                      margin=\"normal\"\n                      required\n                      fullWidth\n                      label=\"Date of Birth\"\n                      inputType=\"Date\"\n                      name=\"dob\"\n                      autoComplete=\"dob\"\n                      id=\"dob\"\n                      value={formData.dob}\n                      onChange={handleChange}\n                    />\n                  </>\n                )}\n                {formData.role === \"organisation\" && (\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Organisation Name\"\n                    inputType=\"text\"\n                    name=\"organisationName\"\n                    value={formData.organisationName}\n                    onChange={handleChange}\n                  />\n                )}\n                {formData.role === \"hospital\" && (\n                  <TextField\n                    margin=\"normal\"\n                    required\n                    fullWidth\n                    label=\"Hospital Name\"\n                    inputType=\"text\"\n                    name=\"hospitalName\"\n                    value={formData.hospitalName}\n                    onChange={handleChange}\n                  />\n                )}\n\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Email\"\n                  inputType=\"email\"\n                  name=\"email\"\n                  value={formData.email}\n                  onChange={handleChange}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Password\"\n                  inputType=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleChange}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Website\"\n                  inputType=\"text\"\n                  name=\"website\"\n                  value={formData.website}\n                  onChange={handleChange}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Address\"\n                  inputType=\"text\"\n                  name=\"address\"\n                  value={formData.address}\n                  onChange={handleChange}\n                />\n                <TextField\n                  margin=\"normal\"\n                  required\n                  fullWidth\n                  label=\"Phone\"\n                  inputType=\"text\"\n                  name=\"phone\"\n                  value={formData.phone}\n                  onChange={handleChange}\n                />\n\n                <Button\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  sx={{ mt: 3, mb: 2 }}\n                >\n                  Sign UP\n                </Button>\n                <Grid container>\n                  <Grid item>\n                    <Link href=\"/login\" variant=\"body2\">\n                      {\"Do you have an account? Sign in\"}\n                    </Link>\n                  </Grid>\n                </Grid>\n              </Box>\n            )}\n\n            {/* Error Snackbar */}\n            <Snackbar\n              open={openSnackbar}\n              autoHideDuration={6000}\n              onClose={handleSnackbarClose}\n            >\n              <MuiAlert\n                elevation={6}\n                variant=\"filled\"\n                severity=\"error\"\n                onClose={handleSnackbarClose}\n              >\n                {error}\n              </MuiAlert>\n            </Snackbar>\n          </Box>\n        </Grid>\n      </Grid>\n    </ThemeProvider>\n  );\n};\n\nexport default Form;\n","/**\n * @description      : Login component with asynchronous API call handling\n * @author           : Your Name\n * @group            : Your Group\n * @created          : 03/02/2024 - 17:59:35\n *\n * MODIFICATION LOG\n * - Version         : 1.0.0\n * - Date            : 03/02/2024\n * - Author          : Your Name\n * - Modification    : Updated API call handling\n **/\n\n// eslint-disable-next-line\nimport React, { useEffect } from \"react\";\nimport Navbar from \"../../Navbar\";\nimport Form from \"../../components/Form/Form\";\n\nconst Login = () => {\n  useEffect(() => {\n    // Check if token exists in local storage\n    const token = localStorage.getItem(\"token\");\n\n    if (token) {\n      const role = localStorage.getItem(\"role\");\n      window.location.href = \"/\" + role + \"/dashboard\";\n    }\n  }, []);\n\n  return (\n    <>\n      <Navbar />\n\n      <Form formTitle={\"Login Page\"} submitBtn={\"Login\"} formType={\"login\"} />\n    </>\n  );\n};\n\nexport default Login;\n"],"names":["baseUrl","request","async","method","path","data","url","concat","token","localStorage","getItem","headers","options","body","JSON","stringify","queryParams","URLSearchParams","toString","response","fetch","json","error","console","message","get","put","post","del","Navbar","_jsx","AppBar","position","style","boxShadow","children","_jsxs","Toolbar","Avatar","src","LOGO","sx","width","height","alt","Typography","variant","component","flexGrow","Box","display","xs","md","Button","color","onClick","window","location","href","defaultTheme","createTheme","_ref","formType","submitBtn","formTitle","formData","setFormData","useState","email","password","role","dob","name","organisationName","hospitalName","website","address","phone","handleChange","event","value","target","setError","openSnackbar","setOpenSnackbar","handleSnackbarClose","reason","handleFormSubmit","e","preventDefault","deviceInfoResponse","deviceInfo","ip","time_zone","id","latitude","longitude","city","region","navigator","userAgentData","mobile","user_agent","header","version","os","device","res","API","setItem","ThemeProvider","theme","Grid","container","CssBaseline","item","sm","backgroundImage","backgroundRepeat","backgroundColor","t","palette","mode","grey","backgroundSize","backgroundPosition","Paper","elevation","square","my","mx","flexDirection","alignItems","RadioGroup","row","onChange","FormControlLabel","control","Radio","label","noValidate","onSubmit","mt","TextField","margin","required","fullWidth","autoComplete","autoFocus","type","Checkbox","mb","Link","_Fragment","inputType","Snackbar","open","autoHideDuration","onClose","MuiAlert","severity","Login","useEffect","Form"],"sourceRoot":""}